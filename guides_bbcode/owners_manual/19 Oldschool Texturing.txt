If you're interested in re-creating the original Quake appearance then you should read the page at quaddicted.com about [url=https://www.quaddicted.com/engines/software_vs_glquake]differences between software rendered Quake and GLQuake[/url].

One of the basic takeaways from that page is that you may want to change the texture filtering in Quake to make it more "pixel-y".  The quaddicted.com page has several comparison shots, but here's another (click for large versions to best see the difference):
[previewimg=237206;sizeThumb,floatLeft;filtered.png][/previewimg] [previewimg=237207;sizeThumb,floatRight;pixel.png][/previewimg]

The left image is the familiar GLQuake filtered look; the right image is still an OpenGL renderer but its textures look more like the original software Quake.

If you are using an engine with an OpenGL renderer then you can do this with a console variable:
[code]gl_texturemode GL_NEAREST_MIPMAP_LINEAR[/code]
Some engines will save this to the config file, but in other cases you'll need to put it in autoexec.cfg to make it stick.

This same console variable is also available in DirectQ and the Direct3D version of ProQuake, even though they use a Direct3D renderer. It also works when using the Direct3D mode of FTE.

Engoo has a somewhat similar option through the "r_filter" console variable, which can be used to enable or disable texture filtering. By default it is disabled, but some of Engoo's available graphics presets will enable it.

qbism Super8 specifically does [i]not[/i] support GLQuake-ish texture filtering, so it's a non-issue there.

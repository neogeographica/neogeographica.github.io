Any modern Quake engine has its own instructions for installation, but they all share a few things in common. It's useful to know that each engine follows the same general rules for working with config files, pak files, and other "loose" files not contained in pak files -- which could be maps, 3D models, sounds, etc.
[list]
[/list]
[h1]File Structure Rules[/h1]
[list][*]A Quake engine expects to see a subfolder named "id1" that contains the files "pak0.pak" and "pak1.pak" from the original Quake data.  The engine will also examine this subfolder for additional files to load, but pak0.pak and pak1.pak are the only files you need from the original Quake.[/list]
[list][*]An engine that supports QuakeWorld multiplayer will also examine the "qw" subfolder for additional files.[/list]
[list][*]An engine will also examine any subfolder named using the "-game" command-line option; this is the typical way that a mod is enabled (the mod files are inside that subfolder).[/list]
[list][*]Finally, a modern Quake engine may also have its own specially-named subfolder that it will examine for content, perhaps according to its own unique rules.  For example, ezQuake will load content out of the "ezquake" subfolder.[/list]
[list][*]When Quake loads or saves its configuration, it will use one of those folders; the behavior varies from engine to engine.[/list]
[quote]
[previewimg=233476;sizeOriginal,floatLeft;tmyk.jpg][/previewimg] The original QuakeWorld and GLQuakeWorld engines always store configuration in the file "config.cfg" in the "qw" subfolder.

DarkPlaces, DirectQ, FitzQuake Mark V, ProQuake, QuakeSpasm, and Engoo will by default use "config.cfg" in the "id1" subfolder (Engoo also uses "config.rc").  If you specify a folder using the "-game" command-line option then they will store the configuration in that folder instead.  The original Quake and GLQuake engines also have this behavior.

Qrack stores its "config.cfg" in the "qrack" subfolder, and qbism Super8 stores its configuration in the file "super8.cfg" in the "super8" subfolder.  If you specify a folder using the "-game" command-line option though, both of these engines behave like the ones above and store configuration in the indicated folder.

The other engines mentioned in this guide each have their own special place for stashing configuration, which is [i]not[/i] affected by the "-game" option:
[list]
[*]ezQuake: "config.cfg" in the "ezQuake\configs" subfolder
[*]FTEQW: "fte.cfg" somewhere under your user directory; on Windows for example this config file is stored in "My Games\FTE QuakeWorld\fte" under your personal documents folder
[*]Fodquake: "default.cfg" somewhere under your user directory; on Windows for example this config file is stored in "Fodquake\fodquake\configs" under your personal documents folder
[/list]
[/quote]

Why do we care about this behavior?

For one thing, it's good to know this stuff if you want to manually tweak your config, or whenever you are adding new third-party content that you downloaded.

The Quake Owner's Manual guide goes into lots of detail about working with your config: http://steamcommunity.com/sharedfiles/filedetails/?id=120426294
With addon content usually there will be a readme file to tell you exactly where to put the files you downloaded and how to use them, but a general knowledge of what's going on is always helpful. negke's guide to playing custom maps and mods expands on this: http://steamcommunity.com/sharedfiles/filedetails/?id=166554615
And specifically on-topic here: it's good to have these rules in mind if you are going to be using more than one Quake engine, so that you can keep them from "stepping on each other".  If you are only ever going to run one Quake engine then you can pretty much ignore the rest of this section... otherwise, read on.
[list]
[/list]
[h1]Sharing Content[/h1]
Most obviously, if you have multiple Quake engine executables placed in the same directory, anything you put in the "id1" subfolder of that directory can be seen by all of those engines, since they all use the same rules for finding content.  Anything you put in the "qw" folder can be seen by QuakeWorld-capable engines.  Etc.

So for example let's say you've downloaded a singleplayer map file named "foo.bsp".  Any loose bsp file needs to be placed in the "maps" subfolder of one of the folders that your Quake engine sees; so if you put "foo.bsp" inside "id1\maps" you will guarantee that all of your Quake engines can use it.
[list]
[/list]
[h1]Library Conflicts[/h1]
Some Quake engines consist of a single executable, but others include various dynamically-linked libraries along with the executable. These libraries generally expect to be placed in the same folder as the executable.

So if you have two Quake engines that are distributed with different versions of the same library -- for example, some Windows engines have conflicting versions of "zlib1.dll" -- then you won't be able to dump all their files into the same directory and expect both engines to work.

This problem can (sometimes) be solved, while still allowing shared content, with use of the "-basedir" command-line option.  The "-basedir" option allows you to explicitly specify the directory that contains "id1" and any other data folders mentioned above, rather than just assuming that they are located with the engine executable.

For example you could stash all DarkPlaces engine files in a "C:\Games\QuakeEngines\DarkPlaces" folder and QuakeSpasm files in "C:\Games\QuakeEngines\QuakeSpasm", then put your game data under "C:\Games\QuakeData" -- i.e. your "id1" folder would be at "C:\Games\QuakeData\id1".  If you always launched DarkPlaces or QuakeSpasm using the "-basedir C:\Games\QuakeData" option then they would run correctly.

[quote]
[previewimg=233476;sizeOriginal,floatLeft;tmyk.jpg][/previewimg] The "-basedir" option ideally would be something that any Quake engine supports.

However, just experimenting with this option shows that it seems to not currently work for at least the Windows versions of Fodquake, DirectQ, or Qrack.  And for Fitzquake Mark V, Engoo, and qbism Super8, "-basedir" will only work if the specified path has no spaces in it.

The saving grace for Fodquake, DirectQ, Fitzquake Mark V, and Engoo is that they are just single-file executables without any library baggage, so use of "-basedir" is less likely to be necessary.
[/quote]

Command-line options can be passed to a Quake engine executable by various methods.  See the "Command Line" section of the Quake Owner's Manual guide: http://steamcommunity.com/sharedfiles/filedetails/?id=120426294
[list]
[/list]
[h1]Managing Config Files[/h1]
Sharing maps and other content between engines can be great, but sharing config files is... less great.

With the original Quake engines, both Quake and GLQuake read/write "id1\config.cfg", and both QuakeWorld and GLQuakeWorld read/write "qw\config.cfg".  This is fine because Quake/GLQuake use the same set of config options, and QuakeWorld/GLQuakeWorld use the same set of config options.

When you start using modern Quake engines however, each one can have its own special config options -- or worse, its own interpretation of common config options.  This is perfectly fine if the engine stores its configuration in its own special directory that no other engine will see.  However many of the engines will just tend to dump their config.cfg file into "id1" as described in the File Structure Rules section above.

If you are using two or more engines that want to put their config file in the same place, then you may just need to create completely separate Quake installation directories for them -- don't share any files at all.

Another possible solution is to launch each engine with its own unique "-game" command-line option, like "-game quakespasm", to force it to use a special subfolder to stash its config.  This solution gets in the way though when you want to run a mod using the "-game" option.